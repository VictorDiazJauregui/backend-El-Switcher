"""Initial migration

Revision ID: 599541d50dcd
Revises: 
Create Date: 2024-12-17 21:11:57.740734

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "599541d50dcd"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "games",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("password", sa.LargeBinary(), nullable=True),
        sa.Column("max_players", sa.Integer(), nullable=False),
        sa.Column("min_players", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("LOBBY", "INGAME", "FINISHED", name="gamestatus"),
            nullable=False,
        ),
        sa.Column(
            "turn", sa.Enum("P1", "P2", "P3", "P4", name="turn"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "boards",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column(
            "block_color",
            sa.Enum("RED", "GREEN", "BLUE", "YELLOW", name="color"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("game_id"),
    )
    op.create_table(
        "log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("message", sa.String(length=100), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "players",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.Column(
            "turn", sa.Enum("P1", "P2", "P3", "P4", name="turn"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "card_figs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("in_hand", sa.Boolean(), nullable=True),
        sa.Column(
            "figure",
            sa.Enum(
                "EASY_1",
                "EASY_2",
                "EASY_3",
                "EASY_4",
                "EASY_5",
                "EASY_6",
                "EASY_7",
                "HARD_1",
                "HARD_2",
                "HARD_3",
                "HARD_4",
                "HARD_5",
                "HARD_6",
                "HARD_7",
                "HARD_8",
                "HARD_9",
                "HARD_10",
                "HARD_11",
                "HARD_12",
                "HARD_13",
                "HARD_14",
                "HARD_15",
                "HARD_16",
                "HARD_17",
                "HARD_18",
                name="figuretype",
            ),
            nullable=False,
        ),
        sa.Column("block", sa.Boolean(), nullable=True),
        sa.Column("valid", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "card_moves",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column(
            "move",
            sa.Enum(
                "MOV_1",
                "MOV_2",
                "MOV_3",
                "MOV_4",
                "MOV_5",
                "MOV_6",
                "MOV_7",
                name="movetype",
            ),
            nullable=False,
        ),
        sa.Column("played", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chat",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("message", sa.String(length=100), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=True),
        sa.Column("game_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "square_pieces",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "color",
            sa.Enum("RED", "GREEN", "BLUE", "YELLOW", name="color"),
            nullable=False,
        ),
        sa.Column("row", sa.Integer(), nullable=False),
        sa.Column("column", sa.Integer(), nullable=False),
        sa.Column("board_id", sa.Integer(), nullable=True),
        sa.Column("partial_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["board_id"],
            ["boards.game_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "parallel_boards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("board_id", sa.Integer(), nullable=True),
        sa.Column("player_id", sa.Integer(), nullable=True),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("state_data", sa.Text(), nullable=False),
        sa.Column("move_asociated", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["board_id"],
            ["boards.game_id"],
        ),
        sa.ForeignKeyConstraint(
            ["move_asociated"],
            ["card_moves.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("parallel_boards")
    op.drop_table("square_pieces")
    op.drop_table("chat")
    op.drop_table("card_moves")
    op.drop_table("card_figs")
    op.drop_table("players")
    op.drop_table("log")
    op.drop_table("boards")
    op.drop_table("games")
    # ### end Alembic commands ###
